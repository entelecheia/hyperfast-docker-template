[tool.poetry]
name = "hyperfast-docker-template"
version = "0.32.0"
description = "Hyperfast Docker Template is a powerful tool that leverages copier to streamline the creation of new Docker projects. It simplifies and accelerates Docker configurations, fostering a highly efficient and user-friendly development experience."
authors = ["Young Joon Lee <entelecheia@hotmail.com>"]
license = "MIT"
homepage = "https://hyperfast-docker.entelecheia.ai"
repository = "https://github.com/entelecheia/hyperfast-docker-template"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.12.0"

[tool.poe]
include = [".tasks.toml", ".tasks-extra.toml"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"

[tool.semantic_release]
# General settings
tag_format = "v{version}"
commit_parser = "angular"
major_on_zero = true
allow_zero_version = true
tag_commit = true
no_git_verify = false
version_source = "tag"
commit_version_number = true
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"

# Version variables
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [".docker/docker.version:IMAGE_VERSION"]

# Remote settings
[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

# Changelog settings
[tool.semantic_release.changelog]
insertion_flag = "<!--next-version-placeholder-->"
mode = "update"

# Commit parser options
[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

# Branch settings
[tool.semantic_release.branches.main]
match = "(main|master|release)"
prerelease_token = "rc"
prerelease = false

# Commit author settings
[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

# Publish settings
[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
