{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hyperfast Docker Template","text":"<p>Hyperfast Docker Template is a powerful tool that leverages copier to streamline the creation of new Docker projects. It simplifies and accelerates Docker configurations, fostering a highly efficient and user-friendly development experience.</p> <ul> <li>Documentation: https://hyperfast-docker.entelecheia.ai</li> <li>GitHub: https://github.com/entelecheia/hyperfast-docker-template</li> </ul> <p>Hyperfast Docker Template is an innovative project creation tool that merges the flexibility of Docker with the simplicity of Copier to optimize the project creation process. This tool allows developers to quickly and efficiently set up Docker projects, thereby significantly reducing the time and effort traditionally associated with this process.</p> <p>By harnessing the power of Copier, Hyperfast Docker Template provides a user-friendly interface that developers can utilize to duplicate Docker projects with minimal hassle. It eradicates the need for extensive coding knowledge, making Docker more accessible to a wider range of users.</p> <p>Furthermore, this tool employs a hyperfast approach to Docker project templating, ensuring that new projects are up and running in the quickest time possible. This speed does not compromise the quality or functionality of the Docker projects created, but instead enhances their performance, reliability, and scalability.</p> <p>Hyperfast Docker Template also ensures consistency across Docker projects, as the use of a template guarantees that all projects conform to a standardized layout and configuration. This, in turn, enhances the overall workflow, as developers can familiarize themselves with a consistent project structure and configuration, leading to increased productivity and efficiency.</p> <p>Whether you're an experienced developer or a novice just starting out, Hyperfast Docker Template is the ideal tool to fast-track your Docker project creation process, ensuring a seamless, efficient, and highly productive development experience.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker</li> <li>Docker Compose</li> <li>NVIDIA Docker (for GPU support, Optional)</li> </ul>"},{"location":"#setup","title":"Setup","text":"<ol> <li>Use Copier to copy the template to your project directory:</li> </ol> <pre><code>copier copy --trust gh:entelecheia/hyperfast-docker-template path/to/destination\n</code></pre> <ol> <li>Build the Docker image</li> </ol> <p>Go to the project directory and run the following command:</p> <pre><code>make docker-build\n</code></pre> <p>The <code>docker.base.env</code> file includes various configuration options and environment variables. The <code>docker-compose.base.yaml</code> file uses these variables to customize the behavior of the services. This is a common practice when you want to set different configurations for development, testing, and production environments. The <code>Dockerfile.base</code> file uses these variables to customize the Docker build. These files are automatically generated by Copier when you run the <code>copier copy</code> command.</p> <ol> <li>Start the Docker container:</li> </ol> <pre><code>make docker-up\n</code></pre> <p>This will start a Docker container with the image built in the previous step. The container will run a bash lauch script that starts the application.</p>"},{"location":"#usage","title":"Usage","text":"<p>After starting the container, you can access the application at <code>localhost:&lt;CONTAINER_HOST_WEB_SVC_PORT&gt;</code>. By default, the port is set to <code>18888</code>.</p> <p>You can also SSH into the container using the SSH port specified in <code>CONTAINER_HOST_SSH_PORT</code>. By default, the port is set to <code>2222</code>.</p>"},{"location":"#volumes","title":"Volumes","text":"<p>The <code>docker-compose.base.yaml</code> file specifies several volumes that bind mount directories on the host to directories in the container. These include the cache, the workspace directory, and the scripts directory. Changes made in these directories will persist across container restarts.</p>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues with this setup, please check the following:</p> <ul> <li>Make sure Docker and Docker Compose are installed correctly.</li> <li>Make sure NVIDIA Docker is installed if you're planning to use GPU acceleration.</li> <li>Ensure the environment variables in the <code>docker.base.env</code> file are correctly set.</li> <li>Check the Docker and Docker Compose logs for any error messages.</li> </ul>"},{"location":"#environment-variables","title":"Environment Variables","text":"<p>In Docker, environment variables can be used in the <code>docker-compose.base.yaml</code> file to customize the behavior of the services.</p> <p>The <code>docker-compose</code> command has an <code>--env-file</code> argument, but it's used to set the environment variables for the services defined in the <code>docker-compose.yaml</code> file, not for the <code>docker-compose</code> command itself. The variables defined in the <code>--env-file</code> will not be substituted into the <code>docker-compose.yaml</code> file.</p> <p>However, the environment variables we set in the <code>.docker/docker.base.env</code> file are used in the <code>docker-compose.base.yaml</code> file. For example, the <code>$BUILD_FROM</code> variable is used to set the base image for the Docker build. Therefore, we need to export these variables to the shell environment before running the <code>docker-compose</code> command.</p> <p>This method also allows us to use shell commands in the variable definitions, like <code>\"$(whoami)\"</code> for the <code>USERNAME</code> variable, which wouldn't be possible if we used the <code>--env-file</code> argument. Shell commands in the <code>.env</code> file are not evaluated.</p>"},{"location":"#changelog","title":"Changelog","text":"<p>See the CHANGELOG for more information.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please see the contributing guidelines for more information.</p>"},{"location":"#license","title":"License","text":"<p>This project is released under the MIT License.</p> <p>Check out the usage section for further information.</p> <p>Note</p> <p>This project is under active development.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"usage/","title":"Usage","text":""}]}